FROM debian:bullseye

# 避免交互式提示
ENV DEBIAN_FRONTEND=noninteractive

# 添加必要的源
RUN apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# 安装必要的构建工具和依赖
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    wget \
    git \
    llvm \
    clang \
    make \
    gcc \
    libc6-dev \
    linux-libc-dev \
    libbpf-dev \
    linux-headers-amd64 \
    linux-headers-generic \
    linux-tools-generic \
    linux-tools-common \
    build-essential \
    pkg-config \
    musl-dev \
    && rm -rf /var/lib/apt/lists/*

# 安装 Go
RUN wget https://go.dev/dl/go1.22.0.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go1.22.0.linux-amd64.tar.gz && \
    rm go1.22.0.linux-amd64.tar.gz

# 设置环境变量
ENV PATH="/usr/local/go/bin:${PATH}"
ENV GOPATH="/go"
ENV PATH="${GOPATH}/bin:${PATH}"

# 设置工作目录
WORKDIR /workspace

# 设置 Go 编译环境变量
ENV CGO_ENABLED=1
ENV GOOS=linux
ENV GOARCH=amd64
ENV GOAMD64=v1

# 创建必要的符号链接
RUN ln -sf /usr/include/asm-generic /usr/include/asm && \
    ln -sf /usr/lib/llvm-11/lib/clang/11.0.1/include /usr/include/clang-include

# 设置 BPF 相关环境变量
ENV BPF_CLANG=clang
ENV BPF_CFLAGS="-O2 -g -target bpf -D__TARGET_ARCH_x86 -I/usr/include/x86_64-linux-gnu -I/usr/include -I/usr/include/asm -I/usr/include/clang-include"

CMD ["make", "build-in-docker"]
